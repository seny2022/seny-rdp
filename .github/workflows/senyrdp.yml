name: RDP (Stable)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360     # يفضل مفتوح حتى 6 ساعات

    steps:
    ##################################################################
    # 1) تنزيل وتسجيل ngrok
    ##################################################################
    - name: Install ngrok
      shell: pwsh
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .
        .\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN

    ##################################################################
    # 2) تفعيل RDP + تشغيل الخدمة + التحقق من البورت
    ##################################################################
    - name: Enable & start RDP
      shell: pwsh
      run: |
        $user = 'kamel123'
        $pass = 'MyStrong123'

        # أ) إنشاء مستخدم أدمن + Remote Desktop Users
        net user $user $pass /add
        net localgroup administrators         $user /add
        net localgroup "Remote Desktop Users" $user /add

        # ب) تفعيل RDP عبر الريجيستري + الفايروول
        Set-ItemProperty 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name fDenyTSConnections -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

        # ج) جعل الخدمة أوتوماتيك وتشغيلها
        sc.exe config TermService start= auto
        Start-Service TermService

        # د) انتظار لحد ما يبقى البورت 3389 فى وضع LISTENING
        $tries = 30
        for ($i=1; $i -le $tries; $i++) {
          if (Get-NetTCPConnection -LocalPort 3389 -State Listen -ErrorAction SilentlyContinue) {
            Write-Host "✅ RDP service is listening on 3389"
            break
          }
          Start-Sleep 1
          if ($i -eq $tries) {
            Write-Error "❌ RDP port 3389 is NOT listening."
            exit 1
          }
        }

    ##################################################################
    # 3) تشغيل ngrok فى الخلفية + استخراج الرابط بأمان
    ##################################################################
    - name: Start ngrok tunnel
      id: ng
      shell: pwsh
      run: |
        Start-Process .\ngrok.exe -ArgumentList "tcp 3389" -WindowStyle Hidden
        # نمهِّل ngrok يجهّز
        Start-Sleep 6

        # نحاول لغاية 30 ثانية نجيب الـ URL
        $url = $null
        for ($i=1; $i -le 30; $i++) {
          try {
            $url = (Invoke-RestMethod http://127.0.0.1:4040/api/tunnels).tunnels[0].public_url
            if ($url) { break }
          } catch { }
          Start-Sleep 1
        }
        if (-not $url) { Write-Error "❌ ngrok URL not found."; exit 1 }

        Write-Host "🎉🔗  RDP URL: $url"
        # الطريقة الجديدة لحفظ الـ output
        "url=$url" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8

    ##################################################################
    # 4) ملخص للوج
    ##################################################################
    - name: Finished
      shell: pwsh
      run: |
        Write-Host ""
        Write-Host "Copy this into Remote Desktop (mstsc):"
        Write-Host "  ${{ steps.ng.outputs.url }}  (host:port)"
        Write-Host ""
        Write-Host "User    : kamel123"
        Write-Host "Password: MyStrong123"
